==Basic Rails api
Basic Rails api, ready to use API with User model and authenticating user for api access. Authenticating a user can be done in 3-ways shown below.

===Install & Usage
    $ git clone https://github.com/ravikumarjogu/basic-rails-api/
    $ cd basic-rails-api
    $ bundle install
    $ rake db:migrate
    $ rake db:seed
    $ rails s

=== Test
====Curl
  curl "http://localhost:3000/api/v1/users"
====Postman
  GET "http://localhost:3000/api/v1/users"

=== Authenticating user for api
Its obvious to restrict the anonymous users to access the api. To restrict user access or authenticate valid user, we have three(3) methods.
==== 1. Basic auth or User credentials
Method
  authenticate_or_request_with_http_basic('User') do |email, password|
    User.find_by_email(email).authenticate(password) unless User.find_by_email(email).nil?
  end
===== Test
    curl http://localhost:3000/api/v1/users -u "ravi@dev.com:password"
  Response:
    success: user list
    failure: HTTP Basic. Access denied
for postman see here<code>../screens/basic_auth.png</code>

==== 2. Api access token
Method
  authenticate_or_request_with_http_token do |token, options|
    ApiKey.exists?(access_token: token)
  end
  
===== Test
    curl http://localhost:3000/api/v1/users -H 'Authorization: Token token="USER_API_ACCESS_TOKEN"'
  Response:
    success: user list
    failure: HTTP Basic. Access denied
for postman see here<code>../screens/http_auth_token.png</code>

==== 3. Api Key and Secret auth 
    curl http://localhost:3000/api/v1/users -H 'Authorization: Token token="sometoken"' -H 'Api-key: API_ACCESS_TOKEN' -H 'Api-secret: API_ACCESS_SECRET'
  Response:
    success: user list
    failure: HTTP Basic. Access denied.
for postman see here<code>../screens/api_key_secret.png</code>
=== why
* Its an API made with Rails, available in open here[https://basic-rails-api.herokuapp.com/api/v1] and used here[https://github.com/ravikumarjogu/Silex-REST-API]
* If you are building an app for mobile or web, you can use this for try and storage.
=== References
* Railscasts#352[http://railscasts.com/episodes/352-securing-an-api?view=asciicast]
* CodeCoder[https://codedecoder.wordpress.com/2013/02/21/sample-rest-api-example-in-rails/]
* Stackoverflow
=== Lincese
MIT

==== Tags
#Rails-api,
#rails-api-without-devise,
#authentication-in-rails-api,
#headers-rails-api

